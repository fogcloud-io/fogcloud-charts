{{ $app := .Values.nginx }}
# nginx-service
apiVersion: v1
kind: Service
metadata:
  labels:
{{ include "fogcloud.labels" . | indent 4 }}   
    srv: nginx
  name: nginx
  
spec:
  {{ if eq .Values.expose.type "Ingress" }}
  type: ClusterIP
  {{ else if eq .Values.expose.type "LoadBalancer" }}
  type: NodePort
  {{ else }}
  type: {{ .Values.expose.type }}
  {{ end }}
  {{ if eq .Values.expose.type "LoadBalancer" }}
  externalTrafficPolicy: {{ .Values.expose.LoadBalancer.externalTrafficPolicy }}
  ports:
    - name: http
      port: 80
      targetPort: 80
      nodePort: {{ .Values.expose.LoadBalancer.ports.api.httpPort }}
  {{ end }} 
  {{ if eq .Values.expose.type "NodePort" }}
  externalTrafficPolicy: {{ .Values.expose.NodePort.externalTrafficPolicy }}
  ports:
    - name: http
      port: 80
      targetPort: 80
      nodePort: {{ .Values.expose.NodePort.ports.api.httpPort }}
  {{ end }}   
  {{ if or (eq .Values.expose.type "Ingress") (eq .Values.expose.type "ClusterIP") }}
  ports:
    - name: http
      port: 80
      targetPort: 80
  {{ end }}
  selector:
    app: nginx
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
{{ include "fogcloud.labels" . | indent 4 }}   
    app: nginx
  name: nginx
  
spec:
  replicas: {{ .Values.nginx.replicas }}
  selector:
    matchLabels:
      app: nginx
  strategy:
    type: {{ .Values.nginx.strategy.type | default "RollingUpdate" }}
    {{- if eq .Values.nginx.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.nginx.strategy.rollingUpdate.maxSurge | default "50%" }}
      maxUnavailable: {{ .Values.nginx.strategy.rollingUpdate.maxUnavailable | default 0 }}
    {{- end }}
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - image: {{ .Values.nginx.image }}:{{ .Values.nginx.imageTag }}
          name: nginx
          ports:
            - containerPort: 80
            - containerPort: 443
          {{- if .Values.nginx.resources }}
          resources:
{{ toYaml .Values.nginx.resources | indent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
              name: default-claim
            - mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              name: nginx-claim
      restartPolicy: Always
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: nginx
                topologyKey: "kubernetes.io/hostname"
              weight: 100
      volumes:
        - name: nginx-claim
          configMap:
            name: fog-config
            items:
              - key: nginx.conf
                path: nginx.conf  
        - name: default-claim
          configMap:
            name: nginx-api-config
            items:
              - key: default.conf
                path: default.conf              
status: {}