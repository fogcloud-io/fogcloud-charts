{{ if eq .Values.rabbitmq.type "internal" }}
{{ $app := .Values.rabbitmq.internal }}
{{ $svcType := $app.service.type }}
{{ $ports := $app.service.ports }}
# rabbitmq-service
apiVersion: v1
kind: Service
metadata:
  labels:
{{ include "fogcloud.labels" . | indent 4 }}   
    srv: rabbitmq
  name: rabbitmq
  
spec:
  type: {{ $app.service.type }}
  {{ if or (eq $app.service.type "NodePort") (eq $app.service.type "LoadBalancer") }}
  externalTrafficPolicy: {{ $app.service.externalTrafficPolicy }}
    {{ if and (eq $app.service.externalTrafficPolicy "Local") (eq $app.service.type "LoadBalancer") }}
  healthCheckNodePort: {{ $app.service.healthCheckNodePort }}
    {{ end }}
  {{ end }}
  ports:
    - name: amqp
      port: {{ $ports.amqp.port }}
      targetPort: 5672
      {{ if or (eq $svcType "NodePort") (eq $svcType "LoadBalancer") }}
      nodePort: {{ $ports.amqp.nodePort }}
      {{ end }}
    - name: amqps
      port: {{ $ports.amqps.port }}
      targetPort: 5671
      {{ if or (eq $svcType "NodePort") (eq $svcType "LoadBalancer") }}
      nodePort: {{ $ports.amqps.nodePort }}
      {{ end }}
    - name: dashboard
      port: 15672
      targetPort: 15672
  selector:
    app: rabbitmq
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Pod
metadata:
  labels:
{{ include "fogcloud.labels" . | indent 4 }}   
    app: rabbitmq
  name: rabbitmq
  
spec:
  containers:
    - env:
        {{ if $app.tls.enabled }}
        - name: RABBITMQ_CONFIG_FILE
          value: /etc/rabbitmq/rabbitmq.tls.conf
        {{ else }}
        - name: RABBITMQ_CONFIG_FILE
          value: /etc/rabbitmq/rabbitmq.conf       
        {{ end }} 
        {{ range $fields := $app.envVars }}
        - name: {{ $fields.name }}
          value: "{{ $fields.value }}"
        {{ end }}          
      image: {{ $app.image }}:{{ $app.imageTag }}
      name: rabbitmq
      ports:
        - containerPort: 15672
        - containerPort: 5672
        - containerPort: 5671
      {{- if $app.resources }}
      resources:
{{ toYaml $app.resources | indent 8 }}
      {{- end }}
      volumeMounts:
        - mountPath: /var/lib/rabbitmq
          name: rabbitmq-data
        - mountPath: /etc/rabbitmq/rabbitmq.conf
          subPath: rabbitmq.conf
          name: rabbitmq-claim
        - mountPath: /etc/rabbitmq/rabbitmq.tls.conf
          subPath: rabbitmq.tls.conf
          name: rabbitmq-claim          
        - mountPath: /etc/rabbitmq/enabled_plugins
          subPath: enabled_plugins
          name: rabbitmq-claim
        {{ if $app.tls.enabled }}  
        - mountPath: /etc/rabbitmq/tls.crt
          subPath: tls.crt
          name: rabbitmq-secret
        - mountPath: /etc/rabbitmq/tls.key
          subPath: tls.key
          name: rabbitmq-secret   
        {{ end }}         
  restartPolicy: Always
  {{ if $app.nodeSelector.enabled }}
  nodeSelector:
    {{ $app.nodeSelector.key }}: {{ $app.nodeSelector.value }}
  {{ end }}  
  volumes:
    - name: rabbitmq-claim
      configMap:
        name: fog-config
        defaultMode: 0755
        items:
          - key: rabbitmq.conf
            path: rabbitmq.conf
          - key: rabbitmq.tls.conf
            path: rabbitmq.tls.conf  
          - key: enabled_plugins
            path: enabled_plugins
    {{ if $app.tls.enabled }}        
    - name: rabbitmq-secret
      secret:
        secretName: {{ $app.tls.secretName }}
        items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key 
    {{ end }}    
    - name: rabbitmq-data
      persistentVolumeClaim:
        claimName: {{ $app.persistence.pvc }}               
status: {}
{{ end }}