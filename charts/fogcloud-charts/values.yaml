# Default values for fogcloud-charts.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# 配置文件环境：development,test,production
environment: production

imagePullPolicy: Always

k8sApiServer: "https://localhost:6443"
# 是否启用云函数功能，若安装了fission可以设置为true
fissionEnabled: false

# 暴露web管理后台和api服务，有：Ingress, ClusterIP, NodePort, LoadBalancer这几种类型；
# 若要公开服务，请使用LoadBalancer,Ingress,NodePort三种类型
expose:
  type: NodePort
  insecureOSS: true
  # 各个服务的域名，若启用对应服务的tls，请保证域名是外网可以访问的；
  hosts:
    api: localhost:8001
    mqtt: localhost:8083
  
  tls:
    enabled: false
    cert:
      webAdmin:
        # x509证书创建方式，支持file, auto, none这三种方式
        # file: 通过文件创建，可将对应证书文件：*.key，*.crt，放到fogcloud-charts/configs/cert/webAdmin目录下
        # none: 不创建
        # auto: 使用cert-manager自动生成
        certSource: none
        secretName: web-cert
        dnsName: 
      api:
        certSource: none
        secretName: api-cert
        dnsName: 

  Ingress:
    className: traefik
    controller: traefik.io/ingress-controller
    annotations: {}
    hosts:
      # web管理后台域名
      webAdmin: localhost
      # 后端api服务域名
      api: localhost

  NodePort:
    externalTrafficPolicy: Local
    ports:
      webAdmin:
        httpPort: 8000
      api:
        httpPort: 8001

  LoadBalancer:
    externalTrafficPolicy: Local
    healthCheckNodePort: 4000
    ports:
      webAdmin:
        httpPort: 8000  
      api:
        httpPort: 8001  
        
secret:
  # 配置私有镜像仓库    
  imageCredentials:
    # - registry:
    #   name:
    #   username:
    #   password:
    #   email:

storageClassName: "local-path"

resourceRangeLimit:
  limits:
  # - default:
  #     memory: "512Mi"
  #     cpu: "0.5"
  #   defaultRequest:
  #     memory: "256Mi"
  #     cpu: "0.1"
  #   min:
  #     memory: "128Mi"
  #     cpu: "0.1"
  #   max:  
  #     memory: "4Gi"
  #     cpu: "2"
  #   type: Container    

fogcloud:
  restartPolicy: Always
  image: ghcr.io/fogcloud-io/fogcloud
  imageTag: latest
  replicas: 1
  strategy: 
    type: RollingUpdate # enum: Recreate, RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
  resources:
    # limits:
    #   cpu: "0.5"
    #   memory: "128Mi"

fogcloudWeb:
  image: ghcr.io/fogcloud-io/fogcloud-web
  imageTag: latest
  replicas: 1
  envVars:
    - name: "GATEWAY_CLOUD_STATUS"
      value: "true"
    - name: "MAP_CONFIG"
      value: "china" 
  strategy: 
    type: RollingUpdate # enum: Recreate, RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
  resources:
    # limits:
    #   cpu: "1"
    #   memory: "128Mi"

faasbuilder:
  image: ghcr.io/fogcloud-io/faas-builder
  imageTag: latest
  createKubeconfigWithFile: false
  replicas: 1
  resources:
    # limits:
    #   cpu: "0.1"
    #   memory: "128Mi"  
  strategy: 
    type: RollingUpdate # enum: Recreate, RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0

fogcronScheduler:
  image: ghcr.io/fogcloud-io/fogcron-scheduler
  imageTag: latest
  replicas: 1
  resources:
    # limits:
    #   cpu: "1"
    #   memory: "128Mi"  
  strategy: 
    type: RollingUpdate # enum: Recreate, RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0    

nginx:
  image: nginx
  imageTag: 1.21
  replicas: 1
  resources:
    # limits:
    #   cpu: "1"
    #   memory: "128Mi"  

mqttBroker:
  type: internal
  internal:
    type: emqx
    image: emqx/emqx
    imageTag: 4.2.8
    defaultUsername: fogcloud
    defaultPassword: "4Jy!YC7bdpsjU*6k"
    dashboardUsername: admin
    dashboardPassword: "%PWpPb*qhB*g82dY"
    persistence:
      pvcExisted: false
      pvc: emqx-pvc
      storageClassName: local-path
      storage: 1Gi      
    resources:
      limits:
        cpu: "1"
        memory: "512Mi"  
    nodeSelector:
      enabled: false
      key: kubernetes.io/hostname
      value: fogcloud-prod1
    replicas: 1
    tls:
      enabled: false
      certSource: none # file, auto, none
      secretName: mqtt-cert
    service:
      type: NodePort
      externalTrafficPolicy: Local
      healthCheckNodePort: 30000
      ports:
        mqttTcp:
          port: 1883
          nodePort: 1883
        mqttTcpTls:
          port: 8883
          nodePort: 8883
        httpApi:
          port: 8081
          nodePort: 8081
        mqttWs:
          port: 8083
          nodePort: 8083
        mqttWss:
          port: 8084
          nodePort: 8084
        admin:
          port: 18083
          nodePort: 18083        

rabbitmq:
  type: internal
  internal:
    image: rabbitmq
    imageTag: 3.10.2-management
    replicas: 1
    defaultUsername: rabbitmq
    defaultPassword: fogcloud
    additionalConfigs:
    envVars:
    persistence:
      pvcExisted: false
      pvc: rabbitmq-pvc
      storageClassName: local-path
      storage: 5Gi  
    resources:
      limits:
        cpu: "1"
        memory: "512Mi"  
    tls:
      enabled: false
      certSource: none # file, auto, none 
      secretName: amqp-cert
    service:
      externalTrafficPolicy: Cluster
      healthCheckNodePort: 30001
      type: NodePort
      ports:
        amqp:
          port: 5672
          nodePort: 5672
        amqps:
          port: 5671
          nodePort: 5671

postgres:
  type: internal
  internal: 
    image: postgres
    imageTag: 13
    persistence:
      pvcExisted: false
      keep: true
      pvc: postgres-pvc
      storageClassName: local-path
      storage: 2Gi
    resources:
      limits:
        cpu: "0.1"
        memory: "128Mi"  
    envVars:
      - name: POSTGRES_DB
        value: fogcloud
      - name: POSTGRES_PASSWORD
        value: fogcloud
      - name: POSTGRES_USER
        value: postgres

mongodb:
  type: internal
  internal:
    enabled: true
    image: mongo  
    imageTag: 4.4-rc-focal
    persistence:
      keep: true
      pvcExisted: false
      pvc: mongo-pvc
      storageClassName: local-path
      storage: 1Gi    
    resources:
      limits:
        cpu: "0.1"
        memory: "128Mi"  
    envVars:

redis:
  type: internal
  internal:
    image: redis
    imageTag: 6.2
    persistence:
      keep: true
      pvcExisted: false
      pvc: redis-pvc
      storageClassName: local-path
      storage: 1Gi     
    resources:
      limits:
        cpu: "0.1"
        memory: "128Mi"  
    envVars:

etcd:
  type: internal
  internal:
    enabled: true
    image: bitnami/etcd
    imageTag: 3.5.1
    persistence:
      keep: true
      pvcExisted: false
      pvc: etcd-pvc
      storageClassName: local-path
      storage: 1Gi    
    resources:
      limits:
        cpu: "0.1"
        memory: "128Mi"  
    replicas: 1
    envVars:
      - name: ALLOW_NONE_AUTHENTICATION
        value: "yes"
      - name: ETCD_ADVERTISE_CLIENT_URLS
        value: "http://etcd1:2379"
      - name: ETCD_LISTEN_CLIENT_URLS
        value: "http://0.0.0.0:2379"

minio:
  type: internal
  internal: 
    enabled: true
    image: minio/minio
    imageTag: latest
    persistence:
      keep: true
      pvcExisted: false
      pvc: minio-pvc
      storageClassName: local-path
      storage: 10Gi     
    resources:
      limits:
        cpu: "0.1"
        memory: "128Mi"  
    envVars:
      - name: MINIO_ACCESS_KEY
        value: "1234567890"
      - name: MINIO_REGION_NAME
        value: "cn-south-1"
      - name: MINIO_ROOT_PASSWORD
        value: "fogcloud"
      - name: MINIO_ROOT_USER
        value: "minio"
      - name: MINIO_SECRET_KEY
        value: "abcdefghi"